# Excepciones Handling

first_number = 1
# second_number = 4
second_number = "4"

# Try except
try:
    print(first_number + second_number)
    print("[OK] Operaci√≥n ejecutada exitosamente ‚ö°")
except:
    print("[Error] Se ha producido un error, no se pudo ejecutar la operaci√≥n üí•")


print("--------")

# Try excep Else
# El Else se ejecuta cuandon entre el try y
# except no se ha producido un error(excepci√≥n)
try:
    print(first_number + second_number)
    print("[OK] Operaci√≥n ejecutada exitosamente ‚ö°")
except:
    print("[Error] Se ha producido un error, no se pudo ejecutar la operaci√≥n üí•")
else:
    print("[Else] La ejecuci√≥n contin√∫a correctamente ‚úîÔ∏è")

print("--------")


# Finally
# Finally se ejecuta cuando haya o no haya una excepci√≥n

try:
    print(first_number + second_number)
    print("[OK] Operaci√≥n ejecutada exitosamente ‚ö°")
except:
    print("[Error] Se ha producido un error, no se pudo ejecutar la operaci√≥n üí•")
else:
    print("[Else] La ejecuci√≥n contin√∫a correctamente ‚úîÔ∏è")
finally:  # Opcional
    print("[Finally] La ejecuci√≥n ha finalizado üëå")


print("--------")
# Excepciones por tipo
user_input = input("Ingresa un n√∫mero entero: ")

try:
    number = int(user_input)
    print(f"[OK] Ingresaste un n√∫mero entero (int). Tu n√∫mero es: {number}")
except ValueError:
    print("[Error: ValueError]: No ingresaste un n√∫mero entero v√°lido.")



print("--------")
# Captura de la informaci√≥n de la excepci√≥n
user_input = input("Ingresa un n√∫mero entero: ")

try:
    number = int(user_input)
    print(f"[OK] Ingresaste un n√∫mero entero (int). Tu n√∫mero es: {number}")
except ValueError as e:
    print(f"[Error: ValueError]: No ingresaste un n√∫mero entero v√°lido -> {e}.")
except Exception as e:
    print(e)
# except Exception es una captura general de errores. Equivale a un `except` vac√≠o pero mejor